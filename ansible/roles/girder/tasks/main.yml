---
- name: Get the most recent version of pip and setuptools
  pip:
    name:
      - pip
      - setuptools
    extra_args: -U
    virtualenv: "{{ girder_virtualenv }}"
    # Implicitly create a Python 3 virtualenv if it doesn't exist
    virtualenv_command: "/usr/bin/python3 -m venv"

- name: Always use virtualenv when logging in
  shell: |
    echo ". /home/{{ girder_exec_user }}/.virtualenvs/girder/bin/activate" >> /etc/bash.bashrc
    echo ". /home/{{ girder_exec_user }}/.virtualenvs/girder/bin/activate" >> /etc/bashrc
    echo ". /home/{{ girder_exec_user }}/.virtualenvs/girder/bin/activate" >> /etc/profile
    echo ". /home/{{ girder_exec_user }}/.virtualenvs/girder/bin/activate" >> "/home/{{ girder_exec_user }}/.bashrc"
    echo ". /home/{{ girder_exec_user }}/.virtualenvs/girder/bin/activate" >> "/home/{{ girder_exec_user }}/.profile"
  become: true

- name: Install other python modules needed by ansible for provisioning (not in the girder virtualenv)
  become: true
  pip:
    name:
      - requests
      - girder_client
    state: present

- name: Clone girder
  git:
    repo: https://github.com/AhmedNaglah/girder.git
    dest: "{{ girder_root }}"
    accept_hostkey: yes
    force: yes
    version: "{{ girder_version }}"

- name: Install girder with some optional components
  pip:
    chdir: "{{ girder_root }}"
    name: ".[mount]"
    editable: true
    extra_args: "--find-links https://girder.github.io/large_image_wheels"
    virtualenv: "{{ girder_virtualenv }}"
    state: present

- name: Create a directory for the girder mount
  file: state=directory path="{{ root_dir }}/mount"

- name: Install girder-client from our source
  pip:
    chdir: "{{ girder_root }}/clients/python"
    name: "."
    editable: true
    virtualenv: "{{ girder_virtualenv }}"
    state: present

- name: Ensure the .girder folder exists
  file:
    path: /home/{{ girder_exec_user }}/.girder
    state: directory

- name: Set the girder configuration file
  template:
    src: girder.local.cfg.j2
    dest: /home/{{ girder_exec_user }}/.girder/girder.cfg
    mode: '0666'

- name: Add a convenience script for restarting girder
  template:
    src: restart_girder.sh.j2
    dest: /usr/local/bin/restart_girder.sh
    mode: '0777'
  become: true
  when: docker is defined

- name: Add a convenience script for rebuilding and restarting girder
  template:
    src: rebuild_and_restart_girder.sh.j2
    dest: /usr/local/bin/rebuild_and_restart_girder.sh
    mode: '0777'
  become: true
  when: docker is defined

- name: Clone girder_worker_utils
  git:
    repo: https://github.com/AhmedNaglah/girder_worker_utils.git
    dest: /opt/girder_worker_utils
    accept_hostkey: yes
    version: "{{ girder_worker_utils_version }}"

- name: Install girder_worker_utils
  pip:
    name: /opt/girder_worker_utils
    editable: true
    virtualenv: "{{ girder_virtualenv }}"
    state: present

- name: Clone girder_worker
  git:
    repo: https://github.com/AhmedNaglah/girder_worker.git
    dest: /opt/girder_worker
    accept_hostkey: yes
    version: "{{ girder_worker_version }}"

- name: Create local worker config file
  template:
    src: worker.local.cfg.j2
    dest: /opt/girder_worker/girder_worker/worker.local.cfg
    mode: 0644
    owner: "{{ girder_exec_user }}"
    group: "{{ girder_exec_group }}"

- name: Install girder_worker
  pip:
    name: "/opt/girder_worker[girder]"
    editable: true
    extra_args: "--find-links https://girder.github.io/large_image_wheels"
    virtualenv: "{{ girder_virtualenv }}"
    state: present

- name: Clone slicer_cli_web
  git:
    repo: https://github.com/AhmedNaglah/slicer_cli_web.git
    dest: /opt/slicer_cli_web
    accept_hostkey: yes
    version: "{{ slicer_cli_web_version }}"

- name: Install slicer_cli_web
  pip:
    name: "/opt/slicer_cli_web[girder]"
    editable: true
    extra_args: "--find-links https://girder.github.io/large_image_wheels"
    virtualenv: "{{ girder_virtualenv }}"
    state: present

- name: Clone import-tracker
  git:
    repo: https://github.com/AhmedNaglah/import-tracker.git
    dest: /opt/import-tracker
    accept_hostkey: yes

- name: Install import-tracker
  pip:
    name: "/opt/import-tracker"
    editable: true
    virtualenv: "{{ girder_virtualenv }}"
    state: present

- name: Clone large_image
  git:
    repo: https://github.com/AhmedNaglah/large_image.git
    dest: /opt/large_image
    accept_hostkey: yes
    version: "{{ large_image_version }}"

- name: Install large_image
  pip:
    chdir: /opt/large_image
    name: "/opt/large_image/.[memcached]"
    extra_args: "-rrequirements-dev.txt --find-links https://girder.github.io/large_image_wheels"
    editable: true
    virtualenv: "{{ girder_virtualenv }}"
    state: present

- name: Clone HistomicsUI
  git:
    repo: https://github.com/AhmedNaglah/HistomicsUI.git
    dest: /opt/HistomicsUI
    accept_hostkey: yes
    version: "{{ histomicsui_version }}"

- name: Install HistomicsUI
  pip:
    name: "/opt/HistomicsUI/.[analysis]"
    editable: true
    virtualenv: "{{ girder_virtualenv }}"
    state: present

- name: Install Girder plugins
  pip:
    name:
      # girder-archive-access and girder-dicom-viewer use a library that has
      # issues
      # - girder-archive-access
      # - girder-dicom-viewer
      - girder-homepage
      - girder-ldap
      - girder-resource-path-tools
      - girder-user-quota
      - girder-virtual-folders
      - girder-xtk-demo
    # extra_args: "--pre"
    virtualenv: "{{ girder_virtualenv }}"
    state: present

- name: Avoid bad versions of virtualenv
  pip:
    name:
      - virtualenv!=20.0.11,!=20.0.12
    virtualenv: "{{ girder_virtualenv }}"
    state: present

- name: Build girder
  environment:
    - LC_ALL: "C.UTF-8"
    - LANG: "C.UTF-8"
  command: "{{ girder_virtualenv }}/bin/girder build"

- name: Link the root directory to an old location
  file:
    src: "{{ root_dir }}"
    path: "/opt/histomicstk"
    state: link
  become: true

- name: Ensure files are owned by the right user and are public
  file:
    path: "{{ root_dir }}"
    owner: "{{ girder_exec_user }}"
    group: "{{ girder_exec_group }}"
    mode: u=rwX,g=rX,o=rX
    recurse: yes
  become: true

- name: Add a script to set hosts, ids, and other properties if necessary
  copy:
    src: ../../common/set_environment.py
    dest: "{{ root_dir }}/set_environment.py"
    mode: 0744
    owner: root
  become: true
  when: docker is defined

- name: Add a script to get CLIs and add them to HistomicsTK
  copy:
    src: utils/cli_test.py
    dest: "{{ root_dir }}/cli_test.py"
    mode: 0744
    owner: "{{ girder_exec_user }}"
    group: "{{ girder_exec_group }}"
  become: true
